@startuml




/' COLOUR DESIGN '/
skinparam class {
BackgroundColor<<ippl>> Wheat
BorderColor<<ippl>> Tomato

BackgroundColor<<alpine>> GreenYellow
BorderColor<<alpine>> ForestGreen


' BackgroundColor<<invisible>> Transparent
' BorderColor<<invisible>> Transparent
' LineColor<<invisible>> Transparent
' FontColor<<invisible>> Transparent 

}

 
' <style>
' diamond {
' BackgroundColor Transparent
' LineColor Transparent
' ' FontColor green
' ' FontName arial
' ' FontSize 15
' } 


' ' circle {??????
' ' BackgroundColor Transparent
' ' LineColor Transparent
' ' FontColor Transparent
' ' ' FontName arial
' ' ' FontSize 15
' ' }  
' <style>



' package legend{

' <> y1 
' <> y2
' <> x1 
' <> x2
' y1 *--r> y2 : Original Pointer
' x1 -[#blue]r-> x2 : Pointer

' }

' package legend2{
' ' <> z1
' ' <> z2
' ' <> a1
' ' <> a2
' <> b1
' <> b2
' <> c1
' <> c2


' b1 -right-* b2  : Composition
' c1 -right-o c2  : Aggregation
' ' z1 .right.|> z2 : Realisation  
' ' a1 -right-|> a2 : Generalisation \n(Inheritance) 

' }



package LEGEND{
    <> w1 
    <> w2
    <> x1 
    <> x2
    <> y1 
    <> y2
    <> z1
    <> z2
    <> a1
    <> a2
    <> b1
    <> b2
    <> c1
    <> c2
    <> d1
    <> d2
    <> e1
    <> e2
    <> f1
    <> f2
    entity X
    <> g1
    <> g2
    ' <> g3


    w1 -[hidden]d-> x1
    w2 -[hidden]d-> x2
    x1 -[hidden]d-> y1
    x2 -[hidden]d-> y2
    y1 -[hidden]d-> z1
    y2 -[hidden]d-> z2
    z1 -[hidden]d-> a1
    z2 -[hidden]d-> a2
    a1 -[hidden]d-> b1
    a2 -[hidden]d-> b2
    b1 -[hidden]d-> c1
    b2 -[hidden]d-> c2
    c1 -[hidden]d-> d1
    c2 -[hidden]d-> d2
    d1 -[hidden]d-> e1
    d2 -[hidden]d-> e2
    e1 -[hidden]d-> f1
    e2 -[hidden]d-> f2
    f1 -[hidden]d-> g1
    f2 -[hidden]d-> g2

    ' g1 -[hidden]d-> A
    ' g2 -[hidden]d-> B


    w1 .r. w2 : Weak Association
    x1 -r- x2 : Association
    y1 ..[#blue]r.> y2 : Dependency
    z1 -[#blue]r> z2 : Navigable \n Association
    ' z1 -r> z2 : Navigable \n Association
    a1 -right-o a2 : Aggregation
    b1 -right-* b2 : Composition
    c1 -right-|> c2 : Generalisation
    d1 ..right.|> d2 : Realisation
    e1 ..[#ForestGreen]right.|> e2 : Instantiation \n (not UML standard)
    f1 o..[#ForestGreen]right.> f2 : Aggregation via. \n Reference/Pointer\n (not UML standard)
    g1 o..[#ForestGreen]right. X   : Aggregation via. explicit \n named Reference/Pointer\n (not UML standard)
    X  ..[#ForestGreen]right.> g2 


    ' A  .r g3 :  relation relais: aid \n for layout improvement \n (not UML standard)
    ' g3 .r B

}







package IPPL {
    

abstract class   BaseManager <<ippl>> {
    virt. prerun()
    virt. prestep()
    virt. poststep()
    virt. advance()
    run()
}
' BaseManager -[hidden]d-> LEGEND

abstract class  PICManager <<ippl>> {
    virt. part2grid()
    virt. grid2part()

    protected:
    <fc> p_container
    <pc> f_container
    <lb> l_balancer
    FieldSolverBase* f_solver

}






package alpine {
        
    class AlpineManager <<alpine>>{
        
    }
       
        entity f_solver

    
        entity f_container
        entity p_container
        entity l_balancer


        class FieldContainer <<alpine>>{
        }

        class ParticleContainer <<alpine>>{
        }

        class LoadBalancer <<alpine>>{
        }
        

    
        class FieldSolver <<alpine>>{
            <T> solver_t
        }


        <> lb
        <> fs
        <> fc
        <> pc

}


' {
'                 BackgroundColor<<invisible>> Transparent
'                 BorderColor<<invisible>> Transparent
'         }



package _m{

    dataclass phi_m
    dataclass rho_m
    dataclass E_m

    entity fl_m
    entity mesh_m

    entity layout_m
    entity attributes_m



    entity pl_m

}


dataclass q
dataclass p
dataclass E






/' Particle Related '/
abstract class  ParticleBase <<ippl>> {

}

abstract class  ParticleAttributeBase <<ippl>> {
}

class  ParticleAttribute <<ippl>> {
}






class ParticleLayout <<ippl>> {
    setParticleBC()
    applyBC()
    update()
}

class ParticleSpatialLayout <<ippl>>{
    * flayout_m
    * rlayout_m


}



abstract class  FieldSolverBase <<ippl>> {
}



abstract class  BareField <<ippl>> {}
class Field <<ippl>>


abstract "Expression<E,N>" <<ippl>>{

    []()
}



class FieldLayout <<ippl>>
abstract class Mesh <<ippl>>
class UniformCartesian <<ippl>>



struct ContainerForAllSpaces <<ippl>>

class RegionLayout <<ippl>>





}






/' ########################################################### '/
/' RELATIONS ... '/
/' ########################################################### '/






BaseManager <|-- PICManager
'  --|> 
PICManager <|-- AlpineManager

AlpineManager o.[#ForestGreen]. p_container
AlpineManager o.[#ForestGreen]. f_container
AlpineManager o.[#ForestGreen]. l_balancer
AlpineManager o.[#ForestGreen]. f_solver




/' ALPINE ########################### '/

' l_balancer  .d.|> LoadBalancer
' f_solver    .d.|> FieldSolver 
' f_container .d.|> FieldContainer
' p_container .d.|> ParticleContainer

' ParticleContainer <-l[#blue]- LoadBalancer
' FieldSolver       <-l[#blue]- LoadBalancer


' p_container <-d[#blue]- LoadBalancer
' f_solver    <-d[#blue]- LoadBalancer




l_balancer  .[#ForestGreen]d> lb 
f_solver    .[#ForestGreen]d.> fs  
f_container .[#ForestGreen]d.> fc 
p_container .[#ForestGreen]d.> pc 



lb .[#ForestGreen]d|> LoadBalancer
fs ..[#ForestGreen]d.|> FieldSolver 
fc ..[#ForestGreen]d.|> FieldContainer
pc ..[#ForestGreen]d.|> ParticleContainer


/' not possible with this fucking '/
' LoadBalancer  -[#blue]u-> pc 
' LoadBalancer  -[#blue]u-> fs 

 LoadBalancer  -[#blue]r-> pc 
 LoadBalancer  -[#blue]r-> fs 






' pc    <-[#blue]- LoadBalancer
' fs    <-[#blue]- LoadBalancer



l_balancer      -[hidden]r> f_container
f_container     -[hidden]r> f_solver
f_solver        -[hidden]r> p_container
lb              -[hidden]r> fc
fc              -[hidden]r> fs
fs              -[hidden]r> pc
LoadBalancer    -[hidden]r> FieldContainer
FieldContainer  -[hidden]r> FieldSolver
FieldSolver     -[hidden]r> ParticleContainer



' p_container -[#green]l> f_solver
' f_container -[#green]l> l_balancer  
' f_solver    -[#green]l> f_container

/' LoadBalancer ########################### '/

LoadBalancer --[#blue]-> rho_m
LoadBalancer --[#blue]-> E_m
LoadBalancer --[#blue]-> phi_m



/' Solvers  ########################### '/

FieldSolverBase <|-down-- FieldSolver

' f_solver   -[#blue]d-> fs
' fs -down-|> FieldSolver  
' f_solver   -[#blue]-> FieldSolver  





/' Fields ########################### '/


FieldContainer o-- rho_m
FieldContainer o-- phi_m
FieldContainer o-- E_m
FieldContainer o-- fl_m
FieldContainer o-- mesh_m

rho_m ..down[#ForestGreen].|> Field 
phi_m ..down[#ForestGreen].|> Field 
E_m   ..down[#ForestGreen].|> Field 

Field     --|> BareField
BareField --|> "Expression<E,N>"



mesh_m ..[#ForestGreen].|> UniformCartesian
UniformCartesian --|> Mesh



/' Particles ########################### '/



ParticleBase  o.[#ForestGreen]. layout_m  
ParticleBase o-- attributes_m  
ParticleBase  <|-d-- ParticleContainer


ParticleAttribute --|> ParticleAttributeBase
attributes_m ..[#ForestGreen].|> ContainerForAllSpaces


attributes_m o-- q
attributes_m o-- p
attributes_m o-- E


q .[#ForestGreen]down.|> ParticleAttribute  
p .[#ForestGreen]down.|> ParticleAttribute  
E .[#ForestGreen]down.|> ParticleAttribute  





/' Layouts ############################## '/

ParticleSpatialLayout --|> ParticleLayout

ParticleSpatialLayout o-- RegionLayout
ParticleSpatialLayout -[#Blue]->FieldLayout
ParticleContainer o-- pl_m  

pl_m ..[#ForestGreen].|> ParticleSpatialLayout





layout_m .[#ForestGreen]l.> pl_m
pl_m .[#blue]l.> mesh_m 

pl_m -[#blue]r-> fl_m



' layout_m -[#blue]l-> pl_m
' pl_m     .[#blue].> mesh_m 
' mesh_m   -[#green]-> fl_m

' pl_m     -[#blue]-> fl_m

' why does this mess up everything





fl_m   ..[#ForestGreen].|> FieldLayout




RegionLayout -[#Blue]-> FieldLayout
RegionLayout -[#Blue]-> Mesh



' lb <-l[#blue]- LoadBalancer

' lb -r> fs


' LoadBalancer -[#blue]u-> p_container
' LoadBalancer -[#blue]u-> f_solver


' lb -[#blue]u-> 
' lb -[#blue]u-> f_solver



' lb -[#blue]u-> p_container
' lb -[#blue]u-> f_solver






/' ###################################### '/
/' LAYOUT HELP/ENFORCEMENT '/
/' ###################################### '/

/' Try to keep it minimal '/

layout_m -[hidden]l> attributes_m























' f_container-[#red]r> l_balancer  
' l_balancer  -[#red]r> f_solver
' f_solver    -[#red]r> p_container


' p_container -[hidden]r-> f_container
' f_container -[hidden]r> f_solver
' f_solver -[hidden]l-> l_balancer
' fl_m -[hidden]r-> mesh_m

' ParticleContainer -[#red]l-> FieldSolver
' FieldSolver -[hidden]r->  ParticleContainer 
' FieldSolver -[#red]r->  ParticleContainer 

' f_solver   -[hidden]-> FieldSolver  

@endluml
